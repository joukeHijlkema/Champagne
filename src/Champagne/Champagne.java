/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Champagne;

import Bulletin.Bulletin3;
import Champagne.Items.Competence;
import Champagne.Items.Eleve;
import Champagne.Items.Matiere;
import Champagne.Items.Note;
import Champagne.Items.Observation;
import Champagne.Items.Periode;
import Champagne.Items.SousMatiere;
import javax.swing.JFileChooser;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hylkema
 */
public class Champagne extends javax.swing.JFrame {

    dataBase myDB = new dataBase("Champagne");
    private int actualYear;
    private int actualTrim;
    private boolean updating;

    /**
     * Creates new form NewJFrame
     */
    public Champagne() {
        initComponents();
//    this.setSize(1208, 808);
        updateAll();
        noteTable.getModel().addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                modifierCellule(e);
            }
        });
    }

    public void modifierCellule(TableModelEvent evt) {
        if (evt.getColumn() >= 0 && (this.parCompButton.isSelected() || this.parEleveButton.isSelected())) {
            int Row = evt.getFirstRow();
            DefaultTableModel model = (DefaultTableModel) noteTable.getModel();
            Competence c = this.getCompetence();
            Matiere m = this.getMatiere();
            SousMatiere sm = this.getSousMatiere();
            Eleve e = this.getEleve();
            Periode p = this.getPeriode();
            String NoteTxt;
            System.out.println("row = " + Row + " changed");
            NoteTxt = (String) model.getValueAt(Row, 2);
            if (this.parEleveButton.isSelected()) {
                int ei = (int) model.getValueAt(Row, 0);
                e = myDB.getEleve(ei);
            } else if (this.parCompButton.isSelected()) {
                int ci = (int) model.getValueAt(Row, 0);
                c = myDB.getComp(ci);
            }
            if ("-".equals(NoteTxt)) {
                myDB.deleteNote(p.ID, e.ID, m.ID, sm.ID, c.ID);
            } else {
                myDB.addNote(new Note(0, p.ID, e.ID, m.ID, sm.ID, c.ID, NoteTxt));
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        pickFile = new javax.swing.JFileChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        eleveTab = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nomField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        prenomField = new javax.swing.JTextField();
        niveauList = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        ajoutEleveButton = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        anneeField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        trimField = new javax.swing.JComboBox();
        ajoutPeriodeButton = new javax.swing.JButton();
        supPeriodeButton = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        P1 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        P2 = new javax.swing.JTextField();
        P3 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        smatField = new javax.swing.JTextField();
        matField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        compField = new javax.swing.JTextField();
        ajoutCompButton = new javax.swing.JButton();
        modCompButton = new javax.swing.JButton();
        supCompButton = new javax.swing.JButton();
        noteTab = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        noteTable = new javax.swing.JTable();
        parEleveButton = new javax.swing.JRadioButton();
        parCompButton = new javax.swing.JRadioButton();
        savePdfButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        scale = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        periodeList = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        matList = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        smatList = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        compList = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        eleveList = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        observationText = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        saveNote = new javax.swing.JButton();
        checkMButton = new javax.swing.JRadioButton();
        checkSmButton = new javax.swing.JRadioButton();
        checkEleveButton = new javax.swing.JRadioButton();
        PAP = new javax.swing.JCheckBox();
        RASED = new javax.swing.JCheckBox();
        PPRE = new javax.swing.JCheckBox();
        ULIS = new javax.swing.JCheckBox();
        PPS = new javax.swing.JCheckBox();
        PAI = new javax.swing.JCheckBox();
        UPE2A = new javax.swing.JCheckBox();
        persoTab = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        Enseignant = new javax.swing.JTextField();
        Cycle = new javax.swing.JSpinner();
        Academi = new javax.swing.JLabel();
        Academie = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        Circonscription = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        Ecole = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        Courriel = new javax.swing.JTextField();
        Classe = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        Telephone = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        Departement = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        Adresse = new javax.swing.JTextField();
        savePersoData = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1208, 806));
        setName("Champagne"); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Eleve"));

        jLabel2.setText("Nom");

        nomField.setNextFocusableComponent(prenomField);
        nomField.setOpaque(false);
        nomField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nomFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nomFieldFocusLost(evt);
            }
        });

        jLabel3.setText("pr√©nom");

        prenomField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                prenomFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                prenomFieldFocusLost(evt);
            }
        });
        prenomField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prenomFieldActionPerformed(evt);
            }
        });

        niveauList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4" }));

        jLabel4.setText("Niveau");

        ajoutEleveButton.setText("Ajouter");
        ajoutEleveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajoutEleveButtonActionPerformed(evt);
            }
        });

        jButton5.setText("Modifier");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Supprimer");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(ajoutEleveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomField, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prenomField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(niveauList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(455, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(nomField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(prenomField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(niveauList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ajoutEleveButton)
                    .addComponent(jButton5)
                    .addComponent(jButton6)))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, jLabel3, nomField, prenomField});

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("P√©riode"));

        jLabel6.setText("Ann√©e");

        jLabel7.setText("trimestre");

        trimField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3" }));

        ajoutPeriodeButton.setText("Ajouter");
        ajoutPeriodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajoutPeriodeButtonActionPerformed(evt);
            }
        });

        supPeriodeButton.setText("Supprimer");
        supPeriodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supPeriodeButtonActionPerformed(evt);
            }
        });

        jLabel25.setText("Parcours citoyen");

        jLabel26.setText("Parcours d'√©ducation a&c");

        jLabel27.setText("Parcours √©ducatif de sant√©");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(anneeField, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(trimField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(ajoutPeriodeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(supPeriodeButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(P1)
                    .addComponent(P2)
                    .addComponent(P3))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel25, jLabel26, jLabel27});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel6)
                    .addComponent(anneeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(trimField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ajoutPeriodeButton)
                    .addComponent(supPeriodeButton)))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(P1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(P2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(P3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 7, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Comp√©tence"));

        jLabel9.setText("Mati√®re");

        jLabel10.setText("Sous mati√®re");

        jLabel11.setText("Comp√©tance");

        ajoutCompButton.setText("Ajouter");
        ajoutCompButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajoutCompButtonActionPerformed(evt);
            }
        });

        modCompButton.setText("Modifier");
        modCompButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modCompButtonActionPerformed(evt);
            }
        });

        supCompButton.setText("Supprimer");
        supCompButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supCompButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(compField))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ajoutCompButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modCompButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(supCompButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(smatField)
                            .addComponent(matField))))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel10, jLabel11, jLabel9});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(matField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(smatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(compField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modCompButton)
                    .addComponent(supCompButton)
                    .addComponent(ajoutCompButton)))
        );

        javax.swing.GroupLayout eleveTabLayout = new javax.swing.GroupLayout(eleveTab);
        eleveTab.setLayout(eleveTabLayout);
        eleveTabLayout.setHorizontalGroup(
            eleveTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eleveTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(eleveTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        eleveTabLayout.setVerticalGroup(
            eleveTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eleveTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Modifications", eleveTab);

        noteTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "", "Note"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        noteTable.setColumnSelectionAllowed(true);
        noteTable.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                noteTableInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        jScrollPane1.setViewportView(noteTable);
        noteTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (noteTable.getColumnModel().getColumnCount() > 0) {
            noteTable.getColumnModel().getColumn(0).setMinWidth(50);
            noteTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            noteTable.getColumnModel().getColumn(0).setMaxWidth(50);
            noteTable.getColumnModel().getColumn(2).setMinWidth(60);
            noteTable.getColumnModel().getColumn(2).setPreferredWidth(60);
            noteTable.getColumnModel().getColumn(2).setMaxWidth(60);
        }

        buttonGroup1.add(parEleveButton);
        parEleveButton.setSelected(true);
        parEleveButton.setText("par √©leve");
        parEleveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parEleveButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(parCompButton);
        parCompButton.setText("par comp√©tence");
        parCompButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parCompButtonActionPerformed(evt);
            }
        });

        savePdfButton.setText("PDF");
        savePdfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePdfButtonActionPerformed(evt);
            }
        });

        jLabel12.setText("Echelle");

        scale.setMaximum(50);
        scale.setMinimum(-50);
        scale.setValue(0);

        jLabel5.setText("P√©riode");

        periodeList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                periodeListActionPerformed(evt);
            }
        });

        jLabel8.setText("Mati√®re");

        matList.setBackground(new java.awt.Color(51, 51, 255));
        matList.setForeground(new java.awt.Color(255, 255, 255));
        matList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matListActionPerformed(evt);
            }
        });

        jLabel13.setText("Sous mati√®re");

        smatList.setBackground(new java.awt.Color(102, 102, 255));
        smatList.setForeground(javax.swing.UIManager.getDefaults().getColor("Tree.dropLineColor"));
        smatList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smatListActionPerformed(evt);
            }
        });

        jLabel14.setText("Comp√©tence");

        compList.setBackground(new java.awt.Color(204, 204, 255));
        compList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compListActionPerformed(evt);
            }
        });

        jLabel1.setText("Eleve");

        eleveList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eleveListActionPerformed(evt);
            }
        });

        observationText.setColumns(20);
        observationText.setRows(5);
        jScrollPane2.setViewportView(observationText);

        jLabel15.setText("Observation");

        saveNote.setText("enregistrer observation");
        saveNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveNoteActionPerformed(evt);
            }
        });

        buttonGroup1.add(checkMButton);
        checkMButton.setText("check m");
        checkMButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkMButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(checkSmButton);
        checkSmButton.setText("check sm");
        checkSmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkSmButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(checkEleveButton);
        checkEleveButton.setText("check e");
        checkEleveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkEleveButtonActionPerformed(evt);
            }
        });

        PAP.setText("PAP");
        PAP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PAPActionPerformed(evt);
            }
        });

        RASED.setText("RASED");
        RASED.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RASEDActionPerformed(evt);
            }
        });

        PPRE.setText("PPRE");
        PPRE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PPREActionPerformed(evt);
            }
        });

        ULIS.setText("ULIS");
        ULIS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ULISActionPerformed(evt);
            }
        });

        PPS.setText("PPS");
        PPS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PPSActionPerformed(evt);
            }
        });

        PAI.setText("PAI");
        PAI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PAIActionPerformed(evt);
            }
        });

        UPE2A.setText("UPE2A");
        UPE2A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPE2AActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout noteTabLayout = new javax.swing.GroupLayout(noteTab);
        noteTab.setLayout(noteTabLayout);
        noteTabLayout.setHorizontalGroup(
            noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(noteTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(noteTabLayout.createSequentialGroup()
                        .addComponent(savePdfButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scale, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE))
                    .addGroup(noteTabLayout.createSequentialGroup()
                        .addGroup(noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)
                            .addComponent(jLabel13)
                            .addComponent(jLabel1)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(periodeList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(compList, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(smatList, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(matList, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveNote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(eleveList, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(noteTabLayout.createSequentialGroup()
                        .addComponent(parEleveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(parCompButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkMButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkSmButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkEleveButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(noteTabLayout.createSequentialGroup()
                        .addComponent(PAP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RASED)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PPRE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ULIS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PPS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PAI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UPE2A)))
                .addContainerGap())
        );
        noteTabLayout.setVerticalGroup(
            noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, noteTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(noteTabLayout.createSequentialGroup()
                        .addGroup(noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(parEleveButton)
                            .addComponent(parCompButton)
                            .addComponent(checkMButton)
                            .addComponent(checkSmButton)
                            .addComponent(checkEleveButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(periodeList))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(matList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(smatList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(compList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eleveList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveNote)
                    .addComponent(PAP)
                    .addComponent(RASED)
                    .addComponent(PPRE)
                    .addComponent(ULIS)
                    .addComponent(PPS)
                    .addComponent(PAI)
                    .addComponent(UPE2A))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(savePdfButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12))
                    .addComponent(scale, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(213, 213, 213))
        );

        jTabbedPane1.addTab("Notes", noteTab);

        jLabel16.setText("Enseignant");

        jLabel17.setText("Cycle");

        Enseignant.setText("V√©ronique Timbert");

        Cycle.setModel(new javax.swing.SpinnerNumberModel(1, 1, 3, 1));

        Academi.setText("Acad√©mie");

        jLabel18.setText("Circonscription");

        jLabel19.setText("Ecole");

        jLabel20.setText("Courriel");

        jLabel21.setText("Classe");

        jLabel22.setText("T√©l√©phone");

        jLabel23.setText("D√©partement");

        jLabel24.setText("Adresse");

        savePersoData.setText("Modifier");
        savePersoData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePersoDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout persoTabLayout = new javax.swing.GroupLayout(persoTab);
        persoTab.setLayout(persoTabLayout);
        persoTabLayout.setHorizontalGroup(
            persoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(persoTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(persoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(savePersoData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(persoTabLayout.createSequentialGroup()
                        .addGroup(persoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel23)
                            .addComponent(Academi)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16)
                            .addComponent(jLabel19)
                            .addComponent(jLabel24))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addGroup(persoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Enseignant, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Cycle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Academie, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Departement, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(Circonscription, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Ecole, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Adresse, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(Telephone, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Courriel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Classe, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, persoTabLayout.createSequentialGroup()
                        .addGroup(persoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(900, 900, 900))
        );

        persoTabLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Academie, Adresse, Circonscription, Classe, Courriel, Cycle, Departement, Ecole, Enseignant, Telephone});

        persoTabLayout.setVerticalGroup(
            persoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(persoTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(persoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(Enseignant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(persoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(Cycle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(persoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Academi)
                    .addComponent(Academie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(persoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(Departement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(persoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(Circonscription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(persoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(Ecole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(persoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(Adresse, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(persoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(Telephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(persoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(Courriel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(persoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(Classe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(savePersoData)
                .addContainerGap(265, Short.MAX_VALUE))
        );

        persoTabLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Academie, Adresse, Circonscription, Classe, Courriel, Cycle, Departement, Ecole, Enseignant, Telephone});

        jTabbedPane1.addTab("Donn√©es perso", persoTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 591, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void eleveListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eleveListActionPerformed
      Eleve e = getEleve();
      if (e != null) {
          nomField.setText(e.NOM);
          prenomField.setText(e.PRENOM);
          niveauList.setSelectedIndex(e.NIVEAU - 1);
          observationText.removeAll();
          observationText.setText(myDB.getObservation(getPeriode(), getEleve()));
          fillTable();
          fillAide();
      }
  }//GEN-LAST:event_eleveListActionPerformed

  private void compListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compListActionPerformed
      Competence c = this.getCompetence();
      if (c != null) {
          compField.setText(c.COMP);
          fillTable();
      }
  }//GEN-LAST:event_compListActionPerformed

  private void smatListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smatListActionPerformed
      Matiere mat = getMatiere();
      SousMatiere smat = getSousMatiere();
      if (smat != null) {
          smatField.setText(smat.SMAT);
          compList.removeAllItems();
          for (Competence c : myDB.getCompetences(mat.ID, smat.ID)) {
              compList.addItem(c);
          }
      } else {
          smatField.setText("");
          compField.setText("");
          compList.removeAllItems();
      }
  }//GEN-LAST:event_smatListActionPerformed

  private void matListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matListActionPerformed
      Matiere mat = getMatiere();
      if (mat != null) {
          matField.setText(mat.MAT);
          smatList.removeAllItems();
          System.out.println("matId = " + mat.ID);
          for (SousMatiere s : myDB.getSousMatieres(mat.ID)) {
              smatList.addItem(s);
          }
      }
  }//GEN-LAST:event_matListActionPerformed

  private void periodeListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_periodeListActionPerformed
      Periode p = getPeriode();
      if (p != null && !this.updating) {
          this.actualYear = p.ANNEE;
          this.actualTrim = p.TRIMESTRE;
          anneeField.setText(String.format("%d", this.actualYear));
          trimField.setSelectedIndex(this.actualTrim - 1);
          updateEleves(this.actualYear);
      }
  }//GEN-LAST:event_periodeListActionPerformed

  private void savePdfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePdfButtonActionPerformed

      FileNameExtensionFilter extFilter = new FileNameExtensionFilter("pdf files", "pdf");
      this.pickFile.setFileFilter(extFilter);
      if (this.pickFile.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
          Bulletin3 b = new Bulletin3(this.pickFile.getSelectedFile().getAbsolutePath(),this.getPeriode(), scale.getValue(), myDB);
          b.makePDF();
          b.Save();
      }
  }//GEN-LAST:event_savePdfButtonActionPerformed

  private void parCompButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parCompButtonActionPerformed
      fillTable();
  }//GEN-LAST:event_parCompButtonActionPerformed

  private void parEleveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parEleveButtonActionPerformed
      fillTable();
  }//GEN-LAST:event_parEleveButtonActionPerformed

    public void fillTable() {
        DefaultTableModel model = (DefaultTableModel) noteTable.getModel();
        model.setRowCount(0);
        Competence c = this.getCompetence();
        Matiere m = this.getMatiere();
        SousMatiere s = this.getSousMatiere();
        Periode p = this.getPeriode();
        Eleve e = this.getEleve();

        if (this.parCompButton.isSelected()) {
            if (e == null) {
                return;
            }
            noteTable.getColumnModel().getColumn(1).setHeaderValue("Competence");
            for (Competence ct : myDB.getCompetences(m.ID, s.ID)) {
                model.addRow(new Object[]{ct.ID, ct.COMP, myDB.getNote(p.ID, e.ID, m.ID, s.ID, ct.ID)});
            }
        } else if (this.parEleveButton.isSelected()) {
            if (c == null) {
                return;
            }
            noteTable.getColumnModel().getColumn(1).setHeaderValue("Eleve");
            for (Eleve et : myDB.getElevesPerYear(this.actualYear)) {
                model.addRow(new Object[]{et.ID, et.NOM + ", " + et.PRENOM, myDB.getNote(p.ID, et.ID, m.ID, s.ID, c.ID)});
            }
        } else if (this.checkMButton.isSelected()) {
            for (Eleve et : myDB.getElevesPerYear(this.actualYear)) {
                model.addRow(new Object[]{et.ID, et.NOM + ", " + et.PRENOM, myDB.getNbNotes(p, et, m)});
            }
        } else if (this.checkSmButton.isSelected()) {
            for (Eleve et : myDB.getElevesPerYear(this.actualYear)) {
                model.addRow(new Object[]{et.ID, et.NOM + ", " + et.PRENOM, myDB.getNbNotes(p, et, m, s)});
            }
        } else if (this.checkEleveButton.isSelected()) {
            noteTable.getColumnModel().getColumn(1).setHeaderValue("Competence");
            for (Matiere mt : myDB.getMatieres()) {
                System.out.println("mat = " + mt.MAT);
                for (SousMatiere st : myDB.getSousMatieres(mt.ID)) {
                    System.out.println("smat=" + st.SMAT);
                    for (Competence ct : myDB.getCompetences(mt.ID, st.ID)) {
                        System.out.println("Comp = " + ct.COMP);
                        String nt = myDB.getNote(p.ID, e.ID, mt.ID, st.ID, ct.ID);
                        if (!nt.equals("-")) {
                            model.addRow(new Object[]{ct.ID, mt.MAT + "/" + st.SMAT + "/" + ct.COMP, nt});
                        }
                    }
                }
            }
        }
    }
  private void noteTableInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_noteTableInputMethodTextChanged
      System.out.println("value changed");
  }//GEN-LAST:event_noteTableInputMethodTextChanged

  private void supPeriodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supPeriodeButtonActionPerformed
      this.supress("Periode");
  }//GEN-LAST:event_supPeriodeButtonActionPerformed

  private void ajoutPeriodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajoutPeriodeButtonActionPerformed
      this.addMod("Periode");
  }//GEN-LAST:event_ajoutPeriodeButtonActionPerformed

  private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
      this.supress("Eleve");
  }//GEN-LAST:event_jButton6ActionPerformed

  private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
      this.addMod("Eleve");
  }//GEN-LAST:event_jButton5ActionPerformed

  private void ajoutEleveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajoutEleveButtonActionPerformed
      this.addMod("Eleve");
  }//GEN-LAST:event_ajoutEleveButtonActionPerformed

  private void supCompButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supCompButtonActionPerformed
      this.supress("Comp");
  }//GEN-LAST:event_supCompButtonActionPerformed

  private void modCompButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modCompButtonActionPerformed
      this.addMod("Comp");
  }//GEN-LAST:event_modCompButtonActionPerformed

  private void ajoutCompButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajoutCompButtonActionPerformed
      this.addMod("Comp");
  }//GEN-LAST:event_ajoutCompButtonActionPerformed

  private void saveNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveNoteActionPerformed
      addMod("Obs");
  }//GEN-LAST:event_saveNoteActionPerformed

    private void checkMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkMButtonActionPerformed
        fillTable();
    }//GEN-LAST:event_checkMButtonActionPerformed

  private void checkSmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkSmButtonActionPerformed
      fillTable();
  }//GEN-LAST:event_checkSmButtonActionPerformed

  private void checkEleveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkEleveButtonActionPerformed
      fillTable();
  }//GEN-LAST:event_checkEleveButtonActionPerformed

  private void nomFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomFieldFocusGained
      this.nomField.selectAll();
  }//GEN-LAST:event_nomFieldFocusGained

  private void nomFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomFieldFocusLost
      this.nomField.select(0, 0);
  }//GEN-LAST:event_nomFieldFocusLost

  private void prenomFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_prenomFieldFocusGained
      this.prenomField.selectAll();
  }//GEN-LAST:event_prenomFieldFocusGained

  private void prenomFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_prenomFieldFocusLost
      this.prenomField.select(0, 0);
  }//GEN-LAST:event_prenomFieldFocusLost

  private void prenomFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prenomFieldActionPerformed
      this.addMod("Eleve");
      this.nomField.requestFocus();
  }//GEN-LAST:event_prenomFieldActionPerformed

    private void savePersoDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePersoDataActionPerformed
        this.myDB.setPersoData(
                this.Academie.getText(),
                this.Departement.getText(),
                this.Circonscription.getText(),
                this.Ecole.getText(),
                this.Adresse.getText(),
                this.Courriel.getText(),
                this.Telephone.getText(),
                this.Classe.getText(),
                this.Enseignant.getText(),
                (int) this.Cycle.getValue());
    }//GEN-LAST:event_savePersoDataActionPerformed

    private void PAPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PAPActionPerformed
        myDB.setAide("PAP",PAP.isSelected(),this.getEleve(),this.getPeriode());
    }//GEN-LAST:event_PAPActionPerformed

    private void RASEDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RASEDActionPerformed
        myDB.setAide("RASED",PAP.isSelected(),this.getEleve(),this.getPeriode());
    }//GEN-LAST:event_RASEDActionPerformed

    private void PPREActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PPREActionPerformed
        myDB.setAide("PPRE",PAP.isSelected(),this.getEleve(),this.getPeriode());
    }//GEN-LAST:event_PPREActionPerformed

    private void ULISActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ULISActionPerformed
        myDB.setAide("ULIS",PAP.isSelected(),this.getEleve(),this.getPeriode());
    }//GEN-LAST:event_ULISActionPerformed

    private void PPSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PPSActionPerformed
        myDB.setAide("PPS",PAP.isSelected(),this.getEleve(),this.getPeriode());
    }//GEN-LAST:event_PPSActionPerformed

    private void PAIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PAIActionPerformed
        myDB.setAide("PAI",PAP.isSelected(),this.getEleve(),this.getPeriode());
    }//GEN-LAST:event_PAIActionPerformed

    private void UPE2AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPE2AActionPerformed
        myDB.setAide("UPE2A",PAP.isSelected(),this.getEleve(),this.getPeriode());
    }//GEN-LAST:event_UPE2AActionPerformed

    private Periode getPeriode() {
        return (Periode) periodeList.getSelectedItem();
    }

    private Eleve getEleve() {
        return (Eleve) eleveList.getSelectedItem();
    }

    private Competence getCompetence() {
        return (Competence) compList.getSelectedItem();
    }

    private Matiere getMatiere() {
        return (Matiere) matList.getSelectedItem();
    }

    private SousMatiere getSousMatiere() {
        return (SousMatiere) smatList.getSelectedItem();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Champagne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Champagne().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Academi;
    private javax.swing.JTextField Academie;
    private javax.swing.JTextField Adresse;
    private javax.swing.JTextField Circonscription;
    private javax.swing.JTextField Classe;
    private javax.swing.JTextField Courriel;
    private javax.swing.JSpinner Cycle;
    private javax.swing.JTextField Departement;
    private javax.swing.JTextField Ecole;
    private javax.swing.JTextField Enseignant;
    private javax.swing.JTextField P1;
    private javax.swing.JTextField P2;
    private javax.swing.JTextField P3;
    private javax.swing.JCheckBox PAI;
    private javax.swing.JCheckBox PAP;
    private javax.swing.JCheckBox PPRE;
    private javax.swing.JCheckBox PPS;
    private javax.swing.JCheckBox RASED;
    private javax.swing.JTextField Telephone;
    private javax.swing.JCheckBox ULIS;
    private javax.swing.JCheckBox UPE2A;
    private javax.swing.JButton ajoutCompButton;
    private javax.swing.JButton ajoutEleveButton;
    private javax.swing.JButton ajoutPeriodeButton;
    private javax.swing.JTextField anneeField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton checkEleveButton;
    private javax.swing.JRadioButton checkMButton;
    private javax.swing.JRadioButton checkSmButton;
    private javax.swing.JTextField compField;
    private javax.swing.JComboBox compList;
    private javax.swing.JComboBox eleveList;
    private javax.swing.JPanel eleveTab;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField matField;
    private javax.swing.JComboBox matList;
    private javax.swing.JButton modCompButton;
    private javax.swing.JComboBox niveauList;
    private javax.swing.JTextField nomField;
    private javax.swing.JPanel noteTab;
    private javax.swing.JTable noteTable;
    private javax.swing.JTextArea observationText;
    private javax.swing.JRadioButton parCompButton;
    private javax.swing.JRadioButton parEleveButton;
    private javax.swing.JComboBox periodeList;
    private javax.swing.JPanel persoTab;
    private javax.swing.JFileChooser pickFile;
    private javax.swing.JTextField prenomField;
    private javax.swing.JButton saveNote;
    private javax.swing.JButton savePdfButton;
    private javax.swing.JButton savePersoData;
    private javax.swing.JSlider scale;
    private javax.swing.JTextField smatField;
    private javax.swing.JComboBox smatList;
    private javax.swing.JButton supCompButton;
    private javax.swing.JButton supPeriodeButton;
    private javax.swing.JComboBox trimField;
    // End of variables declaration//GEN-END:variables

    private void updateAll() {
        this.updating = true;
        periodeList.removeAllItems();
        int id = 0;
        int sid = 0;
        System.out.println(String.format("actual period = %d:%d", this.actualYear, this.actualTrim));
        for (Periode p : myDB.getPeriodes()) {
            periodeList.addItem(p);
            System.out.println(String.format("period = %d:%d", p.ANNEE, p.TRIMESTRE));
            if (p.ANNEE == this.actualYear && p.TRIMESTRE == this.actualTrim) {
                System.out.println(String.format("actual period = %d:%d", this.actualYear, this.actualTrim));
                sid = id;
            }
            id += 1;
        }
        System.out.println("sid = " + sid);
        periodeList.setSelectedIndex(sid);
        updateEleves(this.actualYear);

        matList.removeAllItems();
        for (Matiere m : myDB.getMatieres()) {
            matList.addItem(m);
        }

        this.Academie.setText(this.myDB.ACADEMIE);
        this.Departement.setText(this.myDB.DEPARTEMENT);
        this.Circonscription.setText(this.myDB.CIRCONSCRIPTION);
        this.Ecole.setText(this.myDB.ECOLE);
        this.Adresse.setText(this.myDB.ADRESSE);
        this.Courriel.setText(this.myDB.COURIELLE);
        this.Telephone.setText(this.myDB.TELEPHONE);
        this.Enseignant.setText(this.myDB.ENSEIGNANT);
        this.Classe.setText(this.myDB.CLASSE);
        this.Cycle.setValue(this.myDB.CYCLE);

        this.updating = false;
    }

    private void addMod(String what) {
        switch (what) {
            case "Comp":
                int matId = myDB.getMatId(matField.getText());
                if (matId == 0) {
                    matId = myDB.addMat(new Matiere(0, matField.getText()));
                }
                int smatId = myDB.getSMatId(matId, smatField.getText());
                if (smatId == 0) {
                    smatId = myDB.addSmat(new SousMatiere(0, matId, smatField.getText()));
                }
                myDB.addComp(new Competence(0, matId, smatId, compField.getText()));
                break;
            case "Periode":
                this.actualYear = Integer.parseInt(anneeField.getText());
                this.actualTrim = trimField.getSelectedIndex() + 1;
                myDB.addPeriode(new Periode(0, this.actualYear, this.actualTrim,this.P1.getText(),this.P2.getText(),this.P3.getText()));
                break;
            case "Eleve":
                myDB.addEleve(new Eleve(0,
                        nomField.getText(),
                        prenomField.getText(),
                        niveauList.getSelectedIndex() + 1,
                        this.getPeriode().ANNEE));
                break;
            case "Obs":
                myDB.addObservation(new Observation(0, this.getPeriode().ID, this.getEleve().ID, this.observationText.getText()));
        }
        updateAll();
    }

    private void supress(String what) {
        switch (what) {
            case "Comp":
                int matId = myDB.getMatId(matField.getText());
                int smatId = myDB.getSMatId(matId, smatField.getText());
                int compId = myDB.getCompId(matId, smatId, compField.getText());
                if (compId != 0) {
                    myDB.deleteComp(matId, smatId, compId);
                }
                break;
            case "Periode":
                Periode p = (Periode) periodeList.getSelectedItem();
                if (p != null) {
                    myDB.delete(p);
                }
                break;
            case "Eleve":
                Eleve e = (Eleve) eleveList.getSelectedItem();
                if (e != null) {
                    myDB.delete(e);
                }
                break;
        }
        updateAll();
    }

    private void updateEleves(int ANNEE) {
        eleveList.removeAllItems();
        for (Eleve v : myDB.getElevesPerYear(ANNEE)) {
            eleveList.addItem(v);
        }
    }

    private void fillAide() {
        PAP.setSelected(myDB.getAide("PAP",this.getEleve(),this.getPeriode()));
        RASED.setSelected(myDB.getAide("RASED",this.getEleve(),this.getPeriode()));
        PPRE.setSelected(myDB.getAide("PPRE",this.getEleve(),this.getPeriode()));
        ULIS.setSelected(myDB.getAide("ULIS",this.getEleve(),this.getPeriode()));
        PPS.setSelected(myDB.getAide("PPS",this.getEleve(),this.getPeriode()));
        PAI.setSelected(myDB.getAide("PAI",this.getEleve(),this.getPeriode()));
        UPE2A.setSelected(myDB.getAide("UPE2A",this.getEleve(),this.getPeriode()));
    }
}
